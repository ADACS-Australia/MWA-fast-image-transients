#! /bin/bash -l
#SBATCH -M galaxy
#SBATCH -p workq
#SBATCH --account=mwasci
#SBATCH --time=04:00:00
#SBATCH --nodes=1


# automatically set the right number of corse
# maybe leaving -d blank will do this ...
if [[ $SLURM_JOB_PARTITION -eq "gpuq" ]]
then
    cores=8
else #if [[ $SLURM_JOB_PARTITION -eq "workq" ]]
    cores=20
fi
aprun='aprun -n 1 -d ${cores} -b'

base=BASEDIR
datadir=${base}/processing

obsnum=OBSNUM
tres=TRES
fres=FRES


# start task
cd ${base}
python bin/track_task.py start --jobid=${SLURM_JOBID} --start_time=`date +%s`

# expected number of files from the archive
nfiles=`sqlite3 ${base}/db/MWA-GRB.sqlite "SELECT nfiles FROM observation WHERE obs_id=${obsnum};"`

cd ${datadir}/${obsnum}
# count the number of files that we have (but not the flag files)
files=`ls ${obsnum}_*{gpubox,ppds}*.fits 2>/dev/null | wc -l`

# if nfiles is non-zero then we ensure we have that many files
# nfiles is zero if we aren't tracking the obsid in the database
if [[ ! -z ${nfiles} ]]
then 
    #quit if we are missing files
    if [[ ${nfiles} -eq ${files} ]]
    then
        echo "Found ${files}/${nfiles} files"
    elif [[ ${nfiles} -eq ${files}+1 ]]
    then
        echo "Found ${files} fits files, assuming the missing file is flags"
    else
        echo "expecting ${nfiles} files but only found ${files}"
        exit 1
    fi
fi

zipflag="${obsnum}_flags.zip"
if [[ -e ${zipflag} ]]
then
    unzip ${zipflag}
    flagfiles="-flagfiles ${obsnum}_%%.mwaf"
else
    flagfiles=""
fi

# stop cotter from crashing by swapping these modules
module swap PrgEnv-gnu PrgEnv-cray

# allow missing files since we already checked this above.
$aprun cotter ${flagfiles} -timeres ${tres} -freqres ${fres} -allowmissing \
             -edgewidth 80 -m ${obsnum}_metafits_ppds.fits -o ${obsnum}.ms *gpubox*.fits 

res=$?

if [[ ${res} -eq 0 ]] && [[ -d OBSNUM.ms ]]
then 
     rm *gpubox*fits *.zip *.mwaf ${obsnum}_metafits_ppds.fits
fi

# finish job
cd ${base}
# finish download
if [[ ${res} -eq 0 ]]
then
  python bin/track_task.py finish --jobid=${SLURM_JOBID} --finish_time=`date +%s`
else
  python bin/track_task.py fail --jobid=${SLURM_JOBID} --finish_time=`date +%s`
fi

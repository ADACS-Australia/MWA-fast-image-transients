#! /bin/bash -l
#SBATCH --export=NONE
#SBATCH -M galaxy
#SBATCH -p workq
#SBATCH --account=mwasci
#SBATCH --time=06:00:00
#SBATCH --nodes=1


function test_fail {
if [[ $1 != 0 ]]
then
    cd ${base}
    python bin/track_task.py fail --jobid=${SLURM_JOBID} --finish_time=`date +%s`
    exit $1
fi
}


# automatically set the right number of corse
# maybe leaving -d blank will do this ...
if [[ $SLURM_JOB_PARTITION -eq "gpuq" ]]
then
    cores=8
else #if [[ $SLURM_JOB_PARTITION -eq "workq" ]]
    cores=20
fi

calid=CALOBSID
base=BASEDIR
datadir="${base}/processing"
obsnum=OBSNUM


# start calibration
cd ${base}
python bin/track_task.py start --jobid=${SLURM_JOBID} --start_time=`date +%s`

cd ${datadir}/${obsnum}

# if there is a tile flagging file then use it to flag the data before applying the calibration solutions.
if [[ -e tiles_to_flag.txt ]]
then
    flagantennae ${obsnum}.ms `cat tiles_to_flag.txt`
fi

 applysolutions ${obsnum}.ms ../${calid}/${calid}_*_solutions.bin
test_fail $?

cd ${base}
python bin/track_task.py finish --jobid=${SLURM_JOBID} --finish_time=`date +%s`

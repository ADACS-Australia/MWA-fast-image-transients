#! /bin/bash -l
#SBATCH --export=NONE
#SBATCH -M galaxy
#SBATCH -p workq
#SBATCH --account=mwasci
#SBATCH --time=12:00:00
#SBATCH --nodes=1


function test_fail {
if [[ $1 != 0 ]]
then
    cd ${base}
    python bin/track_task.py fail --jobid=${SLURM_JOBID} --finish_time=`date +%s`
    exit $1
fi
}

# automatically set the right number of corse
# maybe leaving -d blank will do this ...
if [[ $SLURM_JOB_PARTITION -eq "gpuq" ]]
then
    cores=8
else #if [[ $SLURM_JOB_PARTITION -eq "workq" ]]
    cores=20
fi

calibrator=CALIBRATOR
base=BASEDIR
datadir="${base}/processing"
modeldir="$MWA_CODE_BASE/anoko/mwa-reduce/models"
obsnum=OBSNUM


# start
cd ${base}
python bin/track_task.py start --jobid=${SLURM_JOBID} --start_time=`date +%s`


# look for the calibrator model in the database
calmodel=`sqlite3 ${base}/db/MWA-GRB.sqlite "SELECT calfile FROM calibrators WHERE name='${calibrator}'"`

# if it isn't in the database then uset the point source model
if [[ -z ${calmodel} ]]
then
    calmodel=`basename ${modeldir}/model-${calibrator}*point-source.txt`
else
    calmodel=`basename ${calmodel}`
fi
echo "using calibrator model : ${calmodel}"

# check that the model exists
if [[ ! -e ${modeldir}/${calmodel} ]]
then
  echo "Cannot find calibrator model for ${calibrator}"
  echo "File: ${modeldir}/${calmodel} not found"
  test_fail 1
fi

cd ${datadir}/${obsnum}

# Hack to work around broken PYTHONPATH lookup
if [[ ! -d mwapy ]]
then
    mkdir mwapy
    mkdir mwapy/pb
    cd mwapy/pb
    for beammatrix in $MWA_CODE_BASE/MWA_Tools/mwapy/pb/*atrix.fits
    do
        ln -s $beammatrix
    done
    cd ../../
fi

solutions=${obsnum}_${calmodel%%.txt}_solutions_initial.bin

# calibrate
calibrate -j ${cores} -m ${modeldir}/${calmodel} -minuv 20 -applybeam ${obsnum}.ms ${solutions}
test_fail $?

# plot calibration solutions
aocal_plot.py --refant=127 --amp_max=2 ${solutions}
test_fail $?

# apply calibration
applysolutions ${obsnum}.ms ${solutions}
test_fail $?

# run aoflagger
# default is to work on the corrected data column
aoflagger ${obsnum}.ms 
test_fail $?

solutions=${obsnum}_${calmodel%%.txt}_solutions.bin
# calibrate again!
calibrate -j ${cores} -m ${modeldir}/${calmodel} -minuv 20 -applybeam ${obsnum}.ms ${solutions}
test_fail $?

#plot again
aocal_plot.py --refant=127 --amp_max=2 ${solutions}
test_fail $?

# apply calibration again
applysolutions ${obsnum}.ms ${solutions}
test_fail $?

# delete the symlinks and temp directory
rm -r mwapy

cd ${base}
python bin/track_task.py finish --jobid=${SLURM_JOBID} --finish_time=`date +%s`


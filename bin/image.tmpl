#! /bin/bash -l
#SBATCH -M galaxy
#SBATCH -p workq
#SBATCH --account=mwasci
#SBATCH --time=10:00:00
#SBATCH --nodes=1


function test_fail {
if [[ $1 != 0 ]]
then
    cd ${base}
    python bin/track_task.py fail --jobid=${SLURM_JOBID} --finish_time=`date +%s`
    exit $1
fi
}

# automatically set the right number of corse
# maybe leaving -d blank will do this ...
if [[ $SLURM_JOB_PARTITION -eq "gpuq" ]]
then
    cores=8
else #if [[ $SLURM_JOB_PARTITION -eq "workq" ]]
    cores=20
fi
aprun="aprun -n 1 -d ${cores} -b"

base=BASEDIR
datadir=${base}/processing

cd ${datadir}

obsnum=OBSNUM
ncpus=20

# start download
cd ${base}
python bin/track_task.py start --jobid=${SLURM_JOBID} --start_time=`date +%s`

cd ${datadir}/${obsnum}

imfile="${obsnum}-lr-pbcorr-I-image.fits" 
#if [[ ! -e ${imfile} ]]
if [[ 0 ]]
then
  $aprun wsclean -name ${obsnum}-2m -size 3072 3072 \
      -weight briggs -1 -mfsweighting -scale 32asec \
      -pol xx,yy -j ${ncpus} -minuv-l 30 \
      -stopnegative -joinpolarizations -niter 20000 -threshold 0.2 \
      ${obsnum}.ms
  test_fail $?
  
  # make primary beam models
  $aprun beam -2016 -proto ${obsnum}-2m-XX-image.fits -ms ${obsnum}.ms -name beam-MFS
  test_fail $?
  
  # create stokes iquv images
  $aprun pbcorrect ${obsnum}-2m image.fits beam-MFS ${obsnum}-2m-pbcorr
  test_fail $?
else
  echo "${imfile} exists, skipping"
fi

cd ${base}
python bin/track_task.py finish --jobid=${SLURM_JOBID} --finish_time=`date +%s`


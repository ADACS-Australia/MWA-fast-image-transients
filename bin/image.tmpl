#! /bin/bash -l
#SBATCH -M galaxy
#SBATCH -p workq
#SBATCH --account=mwasci
#SBATCH --time=10:00:00
#SBATCH --nodes=1
#SBATCH --mem=32gb

aprun='aprun -n 1 -d 20 -b'
base=BASEDIR
datadir=${base}/processing

cd ${datadir}

obsnum=OBSNUM
ncpus=8

# start download
cd ${base}
python bin/track_task.py start --jobid=${SLURM_JOBID} --start_time=`date +%s`

# TODO fix up the image size/scale

# make the high time resolution images but don't clean
cd ${datadir}
$aprun wsclean -name ${obsnum}/${obsnum}-hr -size 320 320 \
               -weight briggs 0.5 -mfsweighting -scale 25.0amin \
               -pol I -niter 0 \
               -interval 0 232 -intervalsout 232 \
               -smallinversion -j ${ncpus} \
               ${obsnum}/${obsnum}.ms

# test for failure
res=$?
if [[ ${res} != 0 ]]
then
  cd ${base}
  python bin/track_task.py fail --jobid=${SLURM_JOBID} --finish_time=`date +%s`
  exit ${res}
fi

# make the 2min image and clean
$aprun wsclean -name ${obsnum}/${obsnum}-lr \
               -weight briggs 0.5 -mfsweighting -scale 25.0amin \
               -pol xx,yy -j ${ncpus} \
               -joinchannels -stopnegative -joinpolarizations -niter 4000 -threshold 1.0 \
               ${obsnum}/${obsnum}.ms

res=$?
cd ${base}
# finish download
if [[ ${res} -eq 0 ]]
then
  python bin/track_task.py finish --jobid=${SLURM_JOBID} --finish_time=`date +%s`
else
  python bin/track_task.py fail --jobid=${SLURM_JOBID} --finish_time=`date +%s`
fi

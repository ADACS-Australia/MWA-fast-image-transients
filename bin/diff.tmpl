#! /bin/bash -l
#SBATCH --export=NONE
#SBATCH -M galaxy
#SBATCH -p workq
#SBATCH --account=mwasci
#SBATCH --time=01:00:00
#SBATCH --nodes=1


function test_fail {
if [[ $1 != 0 ]]
then
    cd ${base}
    python bin/track_task.py fail --jobid=${SLURM_JOBID} --finish_time=`date +%s`
    exit $1
fi
}
#memory in GB
mem=$( echo "$SLURM_MEM_PER_NODE / 1000" | bc )
# number of cores (accounting for hyper-threading)
cores=$( echo "$SLURM_TASKS_PER_NODE / 2" | bc )

base=BASEDIR
datadir=${base}/processing

cd ${datadir}

obsnum=OBSNUM
ncpus=20

# start download
cd ${base}
python bin/track_task.py start --jobid=${SLURM_JOBID} --start_time=`date +%s`

cd ${datadir}/${obsnum}

# determine which files need to be diff-ed
files=(`ls ${obsnum}-0.5s-t????-pbcorr-I.fits`)
nfiles=${#files[@]}

for (( i=1; i<${nfiles}; i++ ))
do
  # run jobs in groups of N=${cores}
  ((j=j%${cores})); ((j++==0)) && wait
  # extract the time stamp id from thesecond file
  id2=`echo ${files[i-1]} | sed "s/${obsnum-0.5s-\(t????\)-pbcorr-I.fits/\1/g"`
  outfile= "${files[i]%%pbcorr-I.fits}-${id2}-pbcorr-I_diff.fits"
  python ${base}/bin/fitssub.py ${files[i]} ${files[i-1]} ${outfile} &
done
test_fail $?

cd ${base}
python bin/track_task.py finish --jobid=${SLURM_JOBID} --finish_time=`date +%s`

